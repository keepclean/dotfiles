#!/usr/bin/env python
# coding: utf-8

import argparse
import json
import os
import shlex
import subprocess


def main(path):
    bt_rfkill_status = None
    try:
        stdout = run_cmd("rfkill -J -o type,soft")
        bt_rfkill_status = parse_rfkill_output(stdout)

        prepare_cache_dir(path)

    except Exception as err:
        return err

    toggle_bt(bt_rfkill_status, path)

    return 0


def status(path):
    with open(path) as f:
        data = json.load(f)
        print(json.dumps(data), end="")


class CmdEdnsWithError(subprocess.SubprocessError):
    pass


def run_cmd(cmd):
    r = subprocess.run(shlex.split(cmd), capture_output=True, text=True)
    if r.returncode:
        raise CmdEdnsWithError(
            f'{r.args} ended with exit code "{r.returncode}": stderr - {r.stderr}; stdout - {r.stdout}'
        )

    return r.stdout


def parse_rfkill_output(data):
    d = json.loads(data)

    status = None
    for items in d.values():
        for item in items:
            if item["type"] != "bluetooth":
                continue

            status = item["soft"]

    return status


def prepare_cache_dir(path):
    path = os.path.dirname(path)
    os.makedirs(path, mode=0o755, exist_ok=True)


def toggle_bt(rfkill, path):
    data = {
        "text": "",
        "tooltip": "",
        "class": "custom-bt",
        "percentage": 0,
    }

    if rfkill == "unblocked":
        run_cmd("sudo /sbin/systemctl stop bluetooth.service")
        run_cmd("sudo /sbin/rfkill block bluetooth")

    if rfkill == "blocked":
        run_cmd("sudo /sbin/rfkill unblock bluetooth")
        run_cmd("sudo /sbin/systemctl start bluetooth.service")
        data["percentage"] = 100

    with open(f"{path}.tmp", "w") as f:
        json.dump(data, f)

    os.rename(f"{path}.tmp", path)


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("--toggle", action="store_true", help="toggle BT state")
    args = parser.parse_args()

    path = os.path.expanduser("~/.cache/sway-bt-toggle/status")
    if args.toggle:
        exit(main(path))

    status(path)
