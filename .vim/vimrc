if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall | source $MYVIMRC
endif

call plug#begin()
Plug 'FooSoft/vim-argwrap'
Plug 'Raimondi/delimitMate'
Plug 'Yggdroot/indentLine'
Plug 'ajh17/VimCompletesMe'
Plug 'bling/vim-airline'
Plug 'craigemery/vim-autotag'
Plug 'davidhalter/jedi-vim', {'for': 'python'}
Plug 'fatih/vim-go', {'for': 'go'}
Plug 'jonathanfilip/vim-lucius'
Plug 'junegunn/fzf.vim'
Plug 'justmao945/vim-clang', {'for': ['c', 'cpp']}
Plug 'majutsushi/tagbar'
Plug 'maxbrunsfeld/vim-yankstack'
Plug 'neomake/neomake'
Plug 'ntpeters/vim-better-whitespace'
Plug 'psf/black', {'for': 'python'}
Plug 'saltstack/salt-vim', {'for': 'sls'}
Plug 'sheerun/vim-polyglot'
Plug 'stephpy/vim-yaml', {'for': 'yaml'}
Plug 'tweekmonster/braceless.vim', {'for': 'python'}
Plug 'vim-airline/vim-airline-themes'
Plug 'vim-scripts/CSApprox'
call plug#end()

set nocompatible
set timeoutlen=1000 ttimeoutlen=10
autocmd! GUIEnter * set vb t_vb=

set background=dark
colorscheme lucius
let g:airline_theme="lucius"

filetype plugin indent on
set encoding=utf-8
set fileencoding=utf-8
set fileencodings=utf-8
syntax on

set hidden
set noruler
set noshowmode
set laststatus=2
set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab
set ft=cfg
set hlsearch
set backspace=2
set t_Co=256
set autoindent
set number
set relativenumber
set hidden
set splitbelow
set splitright
set history=100
set smartcase
set noincsearch
set nobackup
set noswapfile

"""""""""""""""""""
" redraw speed up "
"""""""""""""""""""
set ttyfast
syntax sync minlines=256
set ttyscroll=3

" General colors
if has('gui_running')
    hi Normal 		guifg=#f6f3e8 guibg=#242424
else
    " Set the terminal default background and foreground colors, thereby
    " improving performance by not needing to set these colors on empty cells.
    hi Normal guifg=NONE guibg=NONE ctermfg=NONE ctermbg=NONE
    let &t_ti = &t_ti . "\033]10;#f6f3e8\007\033]11;#242424\007"
    let &t_te = &t_te . "\033]110\007\033]111\007"
endif

"" Fix backspace indent
set backspace=indent,eol,start

let mapleader=' '
map <leader>w :write<CR>

nnoremap <Tab> :bnext<cr>
nnoremap <S-Tab> :bprevious<cr>

nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

nnoremap <S-h> gT
nnoremap <S-l> gt

autocmd Filetype yaml,yml setlocal ts=2 sts=2 sw=2 cursorcolumn
autocmd Filetype json setlocal ts=2 sts=2 sw=2
autocmd Filetype lua setlocal ts=2 sts=2 sw=2
autocmd BufWritePre *.py execute ':Black'
autocmd FileType gitcommit,markdown setlocal spell

"""""""""""
" vim.fzf "
"""""""""""
nnoremap <c-p> :FZF<cr>
let g:fzf_layout = { 'down': '~20%' }

"""""""""""
" argwrap "
"""""""""""
nnoremap <silent> <leader>a :ArgWrap<CR>

set wildmenu
set wildmode=longest:full,full
set wildignore+=*.o,*.obj,.git,*.rbc,*.pyc,__pycache__,.tags

let g:CSApprox_loaded = 1

""""""""""""""
" IndentLine "
""""""""""""""
let g:indentLine_enabled = 1
let g:indentLine_concealcursor = 'incv'
let g:indentLine_char = '¦'
let g:indentLine_faster = 1

"""""""""""""""""""""
" airline parametrs "
"""""""""""""""""""""
let g:airline_extensions = ['tabline', 'neomake']
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#tab_nr_type = 1
let g:airline#extensions#tabline#formatter = 'unique_tail'
let g:airline#extensions#neomake#enabled = 1
let g:airline_powerline_fonts = 1
let g:bufferline_echo = 0
let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:neomake_list_height = 5

""""""""""
" python "
""""""""""
let python_highlight_all = 1
autocmd BufRead *.py set smartindent cinwords=if,elif,else,for,while,try,except,finally,def,class

""""""""""
" vim-go "
""""""""""
let g:go_fmt_command = "goimports"
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_structs = 1
let g:go_highlight_operators = 1
let g:go_highlight_interfaces = 1
let g:go_highlight_build_constraints = 1
let g:go_fmt_autosave = 1
let g:go_fmt_fail_silently = 1
au FileType go nmap <leader>r <Plug>(go-run)
au FileType go nmap <leader>b <Plug>(go-build)
au FileType go nmap <leader>t <Plug>(go-test)
au FileType go nmap <leader>c <Plug>(go-coverage)
" Open the relevant Godoc for the word under the cursor with <leader>gd
" or open it vertically with <leader>gv
au FileType go nmap <leader>gd <Plug>(go-doc)
au FileType go nmap <leader>gv <Plug>(go-doc-vertical)
" Open the Godoc in browser
au FileType go nmap <leader>gb <Plug>(go-doc-browser)

"""""""""""""""""""
" VimCompleteMe "
"""""""""""""""""""
set completeopt=menu,longest,menuone
let b:vcm_tab_complete = 'omni'
inoremap <expr> <CR> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"

"""""""""""
" Neomake "
"""""""""""
autocmd! BufReadPost,BufWritePost * Neomake
let g:neomake_open_list = 2
let g:neomake_serialize = 1
let g:neomake_serialize_abort_on_error = 1
let g:neomake_echo_current_error = 1
let g:neomake_verbose = 0
let g:neomake_error_sign = {
    \ 'text': '✗',
    \ 'texthl': 'NeomakeErrorSign'
    \ }
let g:neomake_info_sign = {
    \ 'text': 'ⓘ ',
    \ 'texthl': 'NeomakeInfoSign'
    \ }

let g:neomake_python_flake8_maker = {
    \ 'args': ['--ignore=E501'],
    \ }
let g:neomake_python_enabled_makers = ['flake8']
let g:neomake_yaml_enabled_makers = ['yamllint']
let g:neomake_json_enabled_makers = ['jsonlint']
let g:neomake_go_enabled_makers = ['golint', 'govet', 'errcheck']

""""""""""
" tagbar "
""""""""""
nnoremap <silent> <leader>t :TagbarToggle<CR>
let g:tagbar_autofocus=1
let g:tagbar_sort=0
" let g:tagbar_compact=1
let g:tagbar_show_linenumbers=2

"""""""""""""""
" vim-autotag "
"""""""""""""""
let g:autotagTagsFile="tags"

"""""""""""""
" braceless "
"""""""""""""
autocmd FileType python BracelessEnable +fold

"""""""""""""
" yankstack "
"""""""""""""
nmap <leader>p <Plug>yankstack_substitute_older_paste
nmap <leader>P <Plug>yankstack_substitute_newer_paste

""""""""""""
" vim-jedi "
""""""""""""
" let g:jedi#popup_select_first = 0
